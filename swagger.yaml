swagger: '2.0'
info:
  version: '1.0'
  title: "Payscape Payments API"
  description: |
    The Payscape Payments API is a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer)-based API designed to
    allow Payscape's partners/affiliates to integrate their systems with Payscape's merchant processing capabilities.  The 
    functionality exposed through the API includes:
    * Onboard merchants 
    * Processing payment transactions
    * Processing refunds
  
    The base URL for the payscape API is https://api.payscape.com , specific end points need to be appended to this URL to use the service. 
    Example, if one want to get list of all merchants of a affiliate below API could be used: 
    https://api.payscape.com/merchants

    Specific merchant could be fetched using below API by passing merchant id
    https://api.payscape.com/merchants{merchant_id}
    
    All parameters, where relevant, are required unless otherwise specified.
    
    # Getting Started
    In order to use the Payscape Payments API, you will first need to [register as 
    an affiliate](#register-as-an-affiliate). Payscape API uses key based authentication method.Once you have been approved as an affiliate, 
    you can get an API key from Payscape support team. Afterwards one can process transactions through the payscape APIs.
    
    <a name="register-as-an-affiliate"></a>
    ## Register as an Affiliate
    Before you can begin onboarding merchants and processing transactions
    through the Payscape Payments API, you'll first need to become a Payscape
    affiliate.  Go to [Payscape Registration](https://payscape.com/registration/)
    to schedule a demo and understand the registration process.
    
    # Data structure and response format
    The Payscape API follows following DATATYPES and Response Formats.
    Throughout the api the date format we recommend is YYYY-MM-DD HH:MM:SS. 
    The response format will be JSON having status, message and data key.  
    {
      "message": "Successful",
      "status": 200,
      "data": {}
    }
    # Error Handling
    Errors and any exception will be captured during API call processing and send back to user with all the details.
     
    ## Typical Server Responses
    Because the Payscape Payment API utilizes the REST architectural style, with HTTP/S as it's underlying transport, standard HTTP response
    status codes are used to convey the appropriate outcome of calls to the API. [Section 6.1](https://tools.ietf.org/html/rfc7231#section-6) of 
    [RFC 7231](https://tools.ietf.org/html/rfc7231) has a full description of all of the HTTP response status codes, along with their intended 
    usage. Below are some of the response codes you may see, along with a brief description.  
    * 200 `OK` - The request has succeeded.
    * 201 `Created` - The request has been fulfilled and has resulted in one or more new resources being created.
    * 204 `No Content` - The server has successfully fulfilled the request and there is no additional content to send in the response payload body.
    * 400 `Bad Request` - The server cannot or will not process the request due to something that is perceived to be a client error.
    * 401 `Unauthorized` - The request has not been applied because it lacks valid authentication credentials for the target resource.
    * 403 `Forbidden` - The server understood the request but refuses to authorize it.
    * 404 `Not Found` - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.
    * 405 `Method Not Allowed` - The method received in the request-line is known by the origin server but not supported by the target resource.
    * 409 `Conflict` - The request could not be completed due to a conflict with the current state of the target resource.
    * 429 `Too Many Requests` - The user has sent too many requests in a given amount of time ("rate limiting").
    * 500 `Internal Server Error` - The server encountered an unexpected condition that prevented it from fulfilling the request.
    * 503 `Service Unavailable` - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.
    
    # Versioning
    Payscape API are version controlled. While new version of APIs are deployed there will be support available for previous version(Latest version -2)
    # Pagination
    As there could be large amount of data related to merchants, transections etc., Payscape APIs supports paginated output to API calls.
    Following are the options available to get paginated output.
      1. page_size
      2. page_number
      3. sort_by (assume only one field is specified)
      4. sort_order (asc, desc)
    Returns 
      1.Results
      2.total_pages
      
    By default, the pagination information will be in response headers starting with "Pagination-". If requested with a query parameter of "include_pagination_data=true" (false by default), 
    include a "pagination_data" attribute and "records" attribute in the response body. Otherwise, the body is just an array of records of entities requested.
    # Filtering
    Appropriate data filtering options will be available with each APIs. Use need to pass required filter option and data will be servied by API calls accordingly.
    # Feedback and Help
    You can provide your feedback and write to payscape support team for any help or support.
    # Authentication 
    Autherization to payscape platform to use payscape API is accesss controlled with latest security features enabled. You will need to get a affiliate id/ client id, user name and password and a link to generate api id and access token
    to use payscape API form payscape support. 
    
    You could Go to [Generate API key](https://payscapeuserpooltraining.auth.us-east-2.amazoncognito.com/login?response_type=token&client_id=52a6hjmd7e6u4jo03u5lnbqb88&redirect_uri=https://www.google.com)
    log using your user id and password and get id_token and access key in response. Pass this id_token in API header to use payscape APIs
    
    System will validated against given id_token and grant access to API resourceses accordingly.
    
     
#   license:
#     name: MIT
#     url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: ftr0lkb8pi.execute-api.us-east-2.amazonaws.com
basePath: /dev
schemes:
- https
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /merchants:
    x-summary: Merchants
    get:
      x-summary: List All Merchants
      description: |
          Use the "List All Merchants" endpoint to get list of merchant for given affiliate
          on the Payscape platform.  To do this you'll first need to [register as
          an affiliate](#register-as-an-affiliate) with Payscape and pass affiliate id/client id, user name and password.
          
          
          
          Request parameters:
          | Name | Type | description
          |----- |------|-------
          |id_token|string|Generated using Payscape application using affiliate client key.Pass it in id_token in header.
          |affiliate_id|string| Please get it from Payscape support team.
          
      summary: List All Merchants
      parameters:
      - name: "id_token"
        in: "header"
        required: true
        type: "string"
      - name: "affiliate_id"
        in: "body"
        required: true
        schema:
            $ref: '#/definitions/GetMerchantRequest'
      responses:
        200:
         description: Successful Response
         schema:
           $ref: '#/definitions/ArrayOfMerchants'
      security:
      - APIUserPool-Training: []
    post:
      x-summary: Create New Merchant
      description: |
        Use API "Create a New Merchant" endpoint to create a new merchant account
        on the Payscape platform.  To do this you'll first need to [register as
        an affiliate](#register-as-an-affiliate) with Payscape.
        
        Request  Parameters:
        | Name | Type | Description
        | ------- | -------- |----------
        |id_token|string| Generated using Payscape application using affiliate client key and pass it in header under id_token.
        |affiliate_id |integre| Id of affiliate assigned by payscape
        |first_name |string| first name of Merchant
        |last_name|string| last name of mergent 
        |business_information|object| All the details about merchant business details
        |bank_account|object| All the details about merchant bank account       
        |owner_information|object| All the details about business owner
        |billing_information|object| All the details about merchant billing          
      summary: Create New Merchant
      parameters:
        - name: "id_token"
          in: "header"
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMerchantRequest'
      responses:
        201:
          description: 'The request has been fulfilled and new merchant has been created'
      security:
      - APIUserPool-Training: []
    put:
      x-summary: Update Merchant Details
      description: |
        Use API "Update Merchant" endpoint to update selected merchant for an affiliate
        on the Payscape platform.  To do this you'll first need to [register as
        an affiliate](#register-as-an-affiliate) with Payscape.
        
        Request Body Parameters:
        | Name | Type | Description
        | ------- | -------- |----------
        |id_token|string| Generated using Payscape application using affiliate client key and pass it in header under id_token.
        |affiliate_id |integre| Id of affiliate assigned by payscape
        |first_name |string| first name of Merchant
        |last_name|string| last name of mergent 
        |business_information|object| All the details about merchant business details
        |bank_account|object| All the details about merchant bank account       
        |owner_information|object| All the details about business owner
        |billing_information|object| All the details about merchant billing 
      summary: Update Merchant Details
      
      parameters:
        - name: "id_token"
          in: "header"
          required: true
          type: "string"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMerchantRequest'
      responses:
        200:
          description: 'The request has been fulfilled and requested Merchant has been updated'
      security:
      - APIUserPool-Training: []
  /merchants/{id}:
    x-summary: Merchants/{id}
    get:
      description: |
          Use the "Get Merchant Details" endpoint to get details about a merchant for given affiliate
          on the Payscape platform.  To do this you'll first need to [register as
          an affiliate](#register-as-an-affiliate) with Payscape to get your cliend id, user id and password. 
          
          Request body parameters:
          | Name | Type | description
          |----- |------|-------
          |Id_token|string|You will it when you register to Payscape platform as an affiliate.
          |affiliate_id |integre| Id of affiliate assigned by payscape
          |merchant_id|number| Enter merchant id for which you are looking for details.
          
      summary: Get Merchant Details
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_token"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
            $ref: '#/definitions/GetMerchantRequest'
      responses:
        200:
          description: "Information related to merchant has been fetched successfully"
      security:
      - APIUserPool-Training: []
    delete:
      description: |
          Use the "Delete Merchant" endpoint to delete merchant for a merchant for given affiliate
          on the Payscape platform.  To do this you'll first need to [register as
          an affiliate](#register-as-an-affiliate) with Payscape to get your cliend id, user id and password. 
          
          Request body parameters:
          | Name | Type | description
          |----- |------|-------
          |Id_token|string|Pass your ID token in the header.
          |affiliate_id |integre| Id of affiliate assigned by payscape
          |merchant_id|number| Enter merchant id which need to be deleted.
          
      summary: Delete Merchant
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_token"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
            $ref: '#/definitions/Affiliate'
      responses:
        200:
          description: "Requested MErchant is successfully deleted"
      security:
      - APIUserPool-Training: []

  /transactions:
    x-summary: Transactions
    get:
      description: |
          Use the "Get Transection" endpoint to get all the transection for an affiliate 
          on the Payscape platform.  To do this you'll first need to [register as
          an affiliate](#register-as-an-affiliate) with Payscape and pass affiliate key for fetching 
          the list of all merchant.
          
          Request body parameters:
          | Name | Type | description
          |----- |------|-------
          |cell1|cell2|cell3
          
      summary: Get Transections
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: '#/definitions/Merchant'
securityDefinitions:
  APIUserPool-Training:
    type: "apiKey"
    name: "id_token"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
 
definitions:
  Affiliate:
    title: Affiliate
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      affiliate_id:
        type: integer
        format: int32
    required:
      - affiliate_id
  Merchant:
    title: Merchant
    type: object
    properties:
      id:
        type: integer
        format: int32
      first_name:
        type: string
        enum: [Arvind]
      last_name:
        type: string
        enum: [Mishra]
      business_information:
        $ref: '#/definitions/BusinessInformation'
      bank_account_information:
        $ref: '#/definitions/BankAccountInformation'
      owner_information:
        $ref: '#/definitions/OwnerInformation'
      billing_information:
        $ref: '#/definitions/BillingInformation'
    required:
      - id
      - first_name
      - last_name
      - business_type
      - business_information
      - bank_account_information
      - owner_information
   
  ArrayOfMerchants:
    type: array
    items:
      $ref: '#/definitions/Merchant'
    # example:
    #   - question: Favourite programming language?
    #     published_at: '2015-08-05T08:40:51.620Z'
    #     choices:
    #       - choice: Swifts
    #         votes: 10
    #       - choice: Python
    #         votes: 20
    #       - choice: Objective-C
    #         votes: 30
    #       - choice: Ruby
    #         votes: 40
    #   - question: Favourite city?
    #     published_at: '2015-08-05T08:40:51.620Z'
    #     choices:
    #       - choice: Atlanta
    #         votes: 15
    #       - choice: Birmingham
    #         votes: 25
    #       - choice: Jacksonville
    #         votes: 35
    #       - choice: Charlotte
    #         votes: 45
  # Choice:
  #   title: Choice
  #   type: object
  #   properties:
  #     votes:
  #       type: integer
  #       format: int32
  #     choice:
  #       type: string
  #   required:
  #     - votes
  #     - choice
  # PaymentDetail:
  #   title: Payment Detail
  #   type: object
  #   discriminator: paymentDetailType
  #   properties:
  #     paymentDetailType:
  #       type: string
  #       enum: [ CreditCardPaymentDetail, BankPaymentDetail ]
  #   required:
  #     - paymentDetailType
  CreditCardPaymentDetail:
    title: Credit Card Payment Detail
    type: object
    allOf:
      - $ref: '#/definitions/BillingInformation'
      - properties:
          card_number:
            type: string
          card_type:
            type: string
            enum: [ Visa, Mastercard, Discover, Amex ]
          expiration_month:
            type: number
          expiration_year:
            type: number
          cvv:
            type: number
          zip:
            type: string
      - required:
        - card_number
        - card_type
        - expiration_month
        - expiration_year
        - cvv
  BankPaymentDetail:
    title: Checking Payment Detail
    type: object
    allOf:
      - $ref: '#/definitions/BillingInformation'
      - properties:
          account_type:
            type: string
            enum: [ Checking, Savings]
          account_number:
            type: string
          routing_number:
            type: string
      - required:
        - account_number
        - routing_number
  BillingInformation:
    title: Billing Information
    type: object
    discriminator: paymentDetailType
    properties:
      cardType:
        type: string
        enum: [ Visa, Mastercard, Discover, Amex ]
      paymentType:
        type: string
        enum: [ CreditCardPaymentDetail, BankPaymentDetail ]
      firstName:
        type: string
        enum: [Arvind]
      lastName:
        type: string
        enum: [Mishra]
      zip:
        type: string
        enum: [30307]
      # payment_detail:
      #   $ref: '#/definitions/PaymentDetail'
    required:
      - paymentDetailType
  Address:
    title: Address
    type: object
    properties:
      line_1:
        type: string
      line_2:
        type: string
      city:
        type: string
      state:
        type: string
      zipcode:
        type: string
      country:
        type: string
  BusinessInformation:
    title: Business Information
    type: object
    properties:
      legal_name:
        type: string
        enum: [Giovanni Hobbinsq]
      address:
       type: string
       enum: [123 Full St. NW]
      city:
       type: string
       enum: [Atlanta]
      state:
       type: string
       enum: [GA]
      zipcode:
       type: string
       enum: [30307]
      type:
        type: string
        enum: [corporation]
      doing_business_as:
        type: string
        enum: [Madebyg.io]
      description:
        type: string
        title: Description of the business
      country:
        type: string
        enum: [USA]
      website:
        type: string
        enum: [www.madebygio.com]
  BankAccountInformation:
    title: Bank Account Information
    type: object
    properties:
      account_first_name:
        type: string
        enum: [arvind]
      account_last_name:
        type: string
        enum: [Mishra]
      address:
        $ref: '#/definitions/Address'
      account_country:
        type: string
        enum: [USA]
      bank_name:
        type: string
        enum: [Wells Fargo]
      account_number:
        type: string
        enum: [ 3030300292 ]
      confirm_account_number:
        type: string
        enum: [3030300292]
      account_type:
        type: string
        enum: [ Checking, Savings]
      account_ownership_type:
        type: string
        enum: [ Business ]
      routing_number:
        type: string
        enum : [121042882]
  OwnerInformation:
    title: Owner Information
    type: object
    properties:
      first_name:
        type: string
        enum: [Arvind]
      last_name:
        type: string
        enum: [Mishra]
      address:
        type: string
        enum: [415 Euclid Terr NE Unit B.]
      city:
        type: string 
        enum: [Atlanta]
      state:
        type: string 
        enum: [GA]
      zipcode:
        type: string 
        enum : [30307]
      date_of_birth:
        type: string 
        enum: ["1991-10-01"]
      ssn:
        type: string
        enum: [295223943]
      email:
        type: string
        enum: [arvindm@abc.com]
      country:
        type: string
        enum: [USA]
      phone:
        type: string 
        enum: [9209219211]
    required:
      - first_names
      - last_names
      - email
      - ssn
  GetMerchantRequest:
    title: Get Merchants Request
    type: object
    properties:
      affiliate_id:
        type: integer
        format: int32
    required:
      - affiliate_id
     
  CreateMerchantRequest:
    title: Create Merchant Request
    type: object
    properties:
      affiliate_id:
        type: integer
        format: int32
      business_information:
        $ref: '#/definitions/BusinessInformation'
      bank_account:
        $ref: '#/definitions/BankAccountInformation'
      owner_information:
        $ref: '#/definitions/OwnerInformation'
      billing_information:
        $ref: '#/definitions/BillingInformation'
    required:
      - affiliate_id
      - business_information
      - billing_information
      - bank_account
      - owner_information
    # example:
    #   question: Favourite programming language?
    #   choices:
    #     - Swift
    #     - Python
    #     - Objective-C
    #     - Ruby